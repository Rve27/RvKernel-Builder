name: Compile Kernel

on:
  workflow_dispatch:
    inputs:
      device:
          description: 'device codename'
          required: true
      source_kernel:
          description: 'link source kernel'
          required: true
      branch:
          description: 'branch'
          required: true
      token:
          description: 'Telegram bot token'
          required: true
      chat_id:
          description: 'Telegram chat id'
          required: true
      chat_id_2:
          description: 'Telegram chat id 2'
          required: true
      topic_id:
          description: 'Telegram topic id'
          required: true
      status:
          description: 'Status build'
          required: true

env:
  TZ: Asia/Jakarta
  DEVICE_2: ${{ github.event.inputs.device }}
  source_kernel: ${{ github.event.inputs.source_kernel }}
  branch: ${{ github.event.inputs.branch }}
  token: ${{ github.event.inputs.token }}
  chat_id: ${{ github.event.inputs.chat_id }}
  chat_id_2: ${{ github.event.inputs.chat_id_2 }}
  topic_id: ${{ github.event.inputs.topic_id }}
  STATUS: ${{ github.event.inputs.status }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Set up dependencies
      run: |
        sudo apt update -y && sudo apt upgrade -y && sudo apt install nano bc bison ca-certificates curl flex gcc git libc6-dev libssl-dev openssl python-is-python3 ssh wget zip zstd sudo make clang gcc-arm-linux-gnueabi software-properties-common build-essential libarchive-tools gcc-aarch64-linux-gnu -y && sudo apt install build-essential -y && sudo apt install libssl-dev libffi-dev libncurses5-dev zlib1g zlib1g-dev libreadline-dev libbz2-dev libsqlite3-dev make gcc -y && sudo apt install pigz -y && sudo apt install python2 -y && sudo apt install python3 -y && sudo apt install cpio -y && sudo apt install lld -y && sudo apt install llvm -y && sudo apt-get install g++-aarch64-linux-gnu -y && sudo apt install libelf-dev -y && sudo apt install ccache -y

    - name: Compile
      run: |
        case "${DEVICE_2}" in
          "beryllium")
             script="beryllium.sh"
             ;;
          "beryllium-stable")
             script="beryllium-stable.sh"
             ;;
          "riva" | "rolex" | "ugglite")
             script="mi8917.sh"
             ;;
          *)
          echo "Unsupported device: ${DEVICE_2}"
          exit 1
          ;;
        esac
        wget "https://raw.githubusercontent.com/Rve27/RvKernel-Builder/main/scripts/${script}" && chmod +x "${script}" && bash "${script}"
